import re

prefixs = ['일기도_예보장\?동적선택1=', '동적선택2=', '동적버튼1=', '동적버튼2=', '동적버튼3=', '동적버튼4=', '동적버튼5=', '동적버튼6=', '동적버튼7=', '동적버튼8=', '동적버튼9=', '동적버튼10=']
options = {
  "option1" : ['기본예상도','기본예상도(한반도)','국지모델(한반도)','국지모델(상세영역)','북반구예상','구름모의영상','등온위면분석','상세-바람기온','예상단열선도','연직시계열(단기)','연직시계열(10DAY)','연직시계열(북한-72HR)','연직시계열(북한-10DAY)','전선/저기압','전선/저기압(멤버별)','저기압이동경로','저기압이동경로/특성','저기압내습확률','전지구모델비교','모델예측경향','모델종합표출','주간예보가이던스','골추적도','KLAPS예상도','VDAPS예상도'],
  "option2" : {
      '기본예상도': ['면적강수량', '850수렴도,등풍속', '1000-500층후', '강설량', '500고도변화', '눈혼합비', '850고도,상당온위', '850혼합비', '925유선,풍속', '700-850습수도', '200/300고도,기온,풍속', '850전선강도,고도,기온', '925고도,상당온위', '국지총누적강수량', '1000-700층후이류', '700고도,상당온위', '총누적강수량(단기예보용)', '700습수(T-Td)', '200/300유선,풍속', '총누적강수량(3시간간격)', '지상습수(T-Td)', '200/300발산장,등풍속', '700유선,풍속', '종합보조예상', '해면기압,누적강수량', '지상기압변화', '6시간누적강수량', '850유선,풍속', '3시간누적강수량', '925습수(T-Td)', '가강수량,MSLP', '850기온변화', '강수량', '850습수(T-Td)', '850수분속', '700상승속도', '500와도이류', '700전선강도,고도,기온', '1000-850층후', '12시간누적강수량', '총누적강수량(6시간간격)', '500고도,기온,와도', '지상바람', '1000-700층후', '500유선,풍속', '925전선강도,고도,기온'],
      '기본예상도(한반도)': ['700 고도,기온,상당온위', '850수렴도,등풍속', '강풍가이던스', '500 고도,기온,와도', '500고도변화', '대류불안정 종합분석', '눈혼합비', '850혼합비', '1000-500 층후', '700-850습수도', '850전선강도,고도,기온', '1000-700층후이류', '1000-850 층후', '200/300 유선,풍속', '700습수(T-Td)', '상하층 기온차 분석', '지상습수(T-Td)', '200/300발산장,등풍속', '500 유선,풍속', '925 유선,풍속', '지상기압변화', '200/300 고도,기온,풍속', '850 고도,기온,상당온위', '925습수(T-Td)', '가강수량,MSLP', '850기온변화', '850습수(T-Td)', '700 유선,풍속', '1000-700 층후', '시간별 누적강수량', '850수분속', '700상승속도', '500와도이류', '925 고도,기온,상당온위', '700전선강도,고도,기온', '총누적강수량', '신적설(수상댱량비 적용)', '850 유선,풍속', '925전선강도,고도,기온'],
      '국지모델(한반도)': ['지형과바람', '최하층운량', '누적강수량', '지상기온', '장파복사량', '경계층타입', '해면기압,누적강수량', '구름모의영상'],
      '국지모델(상세영역)': ['최하층연직속도', '지형과바람', '누적강수량', '지상기온', '시간강수량', '구름모의영상'],
      '북반구예상': ['상층바람', '850hPa 고도,혼합비', '해면기압, 강수량', '500hPa 고도,기온', '500hPa 고도변화,기온', '하층바람', '500hPa 고도,기온변화', '850hPa 고도,기온변화', '850hPa 고도,상당온위'],
      '구름모의영상': ['지구장파 복사량', '적외채널_히마와리', '적외채널_천리안2A', '수증기채널_천리안2A', '수증기채널_히마와리'],
      '등온위면분석': ['275K', '260K', '265K', '340K', '300K', '315K', '270K', '330K', '290K', '345K', '320K', '280K', '350K', '285K', '335K', '295K', '325K', '305K', '310K'],
      '상세-바람기온': ['WTEM-850hPa', 'WTEM-1000hPa', 'WTEM-300hPa', 'WTEM-700hPa', 'WTEM-500hPa', 'WTEM-200hPa', 'WTEM-925hPa', 'WTEM-지상'],
      '예상단열선도': ['108 서울', '143 대구', '- 065 사리원', '- 121 영월', '- 022 풍산', '- 106 동해', '- 161 사천공항', '- 188 성산', '- 175 진도(구)', '- 177 홍성', '- 710 나주', '- 122 오산', '- 170 완도', '- 169 흑산도', '- 046 신포', '- 여수엑스포(~19.8.25)', '- 115 울릉도', '- 266 광양', '- 268 진도군', '- 055 원산', '104 북강릉', '- 182 제주공항', '- 114 원주', '- 039 희천', '- 153 김해공항', '- 158 광주공항', '- 050 안주', '- 130 울진', '- 233 동천안', '- 098 동두천', '- 068 용연', '- 235 보령', '041 함흥 (함경남도)', '- 165 목포', '- 137 상주', '- 139 포항공항', '- 163 무안공항', '008 청진 (함경북도)', '- 003 선봉', '- 061 장전', '- 060 남포', '058 평양 (평안남도)', '- 016 혜산', '- 284 거창', '- 162 통영', '- 131 청주', '- 119 수원', '069 해주 (황해도)', '- 887 세종(~20.4.1)', '- 129 서산', '184 제주', '- 092 양양공항', '- 112 인천', '- 110 김포공항', '1159 부산', '- 127 충주', '- 239 세종', '- 189 서귀포', '- 135 추풍령', '- 052 양덕', '- 090 속초', '- 192 진주', '035 신의주 (평안북도)', '- 075 평강', '- 279 구미', '- 025 김책', '- 255 북창원', '- 099 문산', '- 095 철원', '156 광주', '- 174 순천', '146 전주', '- 994 조선대(~19.8.25)', '- 245 정읍', '- 283 경주', '133 대전', '- 100 대관령', '- 185 고산', '- 166 목포공항', '- 203 이천', '- 151 울산공항', '- 138 포항', '- 168 여수', '- 037 구성', '- 136 안동', '- 262 나로도', '- 172 고창', '- 140 군산', '- 031 장진', '- 028 수풍', '- 167 여수공항', '- 014 중강', '- 605 영동', '- 070 개성', '- 096 독도', '- 152 울산', '- 232 천안', '- 020 강계', '- 247 남원', '- 102 백령도', '- 155 창원', '- 701 무주', '113 항공(인천공항)', '- 005 삼지연', '- 101 춘천', '- 067 신계', '- 142 대구공항'],
      '연직시계열(단기)': ['108 서울', '143 대구', '- 121 영월', '- 106 동해', '- 161 사천공항', '- 188 성산', '- 175 진도(구)', '- 177 홍성', '- 710 나주', '- 122 오산', '- 170 완도', '- 169 흑산도', '- 여수엑스포(~19.8.25)', '- 115 울릉도', '- 266 광양', '- 268 진도군', '104 북강릉', '- 182 제주공항', '- 114 원주', '- 153 김해공항', '- 158 광주공항', '- 130 울진', '- 233 동천안', '- 098 동두천', '- 235 보령', '- 165 목포', '- 137 상주', '159 부산', '- 139 포항공항', '- 163 무안공항', '- 099 파주', '- 284 거창', '- 162 통영', '- 131 청주', '- 119 수원', '- 887 세종(~20.4.1)', '- 129 서산', '184 제주', '- 092 양양공항', '- 112 인천', '- 110 김포공항', '- 127 충주', '- 239 세종', '- 189 서귀포', '- 135 추풍령', '- 090 속초', '- 192 진주', '- 279 구미', '- 255 북창원', '- 551 평택', '- 095 철원', '156 광주', '- 174 순천', '146 전주', '- 994 조선대(~19.8.25)', '- 245 정읍', '- 283 경주', '- 000 평창', '133 대전', '- 100 대ê´령', '- 185 고산', '- 166 목포공항', '- 203 이천', '- 151 울산공항', '- 138 포항', '- 168 여수', '- 136 안동', '- 262 나로도', '- 172 고창', '- 140 군산', '- 167 여수공항', '- 605 영동', '- 096 독도', '- 152 울산', '- 232 천안', '- 247 남원', '- 102 백령도', '- 155 창원', '- 701 무주', '113 항공(인천공항)', '- 101 춘천', '- 142 대구공항'],
      '연직시계열(10DAY)': ['108 서울', '143 대구', '- 121 영월', '- 106 동해', '- 161 사천공항', '- 188 성산', '- 175 진도(구)', '- 177 홍성', '- 710 나주', '- 122 오산', '- 170 완도', '- 169 흑산도', '- 여수엑스포(~19.8.25)', '- 115 울릉도', '- 266 광양', '- 268 진도군', '104 북강릉', '- 182 제주공항', '- 114 원주', '- 153 김해공항', '- 158 광주공항', '- 130 울진', '- 233 동천안', '- 098 동두천', '- 235 보령', '- 165 목포', '- 137 상주', '159 부산', '- 139 포항공항', '- 163 무안공항', '- 099 파주', '- 284 거창', '- 162 íµ영', '- 131 청주', '- 119 수원', '- 887 세종(~20.4.1)', '- 129 서산', '184 제주', '- 092 양양공항', '- 112 인천', '- 110 김포공항', '- 127 충주', '- 239 세종', '- 189 서귀포', '- 135 추풍령', '- 090 속초', '- 192 진주', '- 279 구미', '- 255 북창원', '- 551 평택', '- 095 철원', '156 광주', '- 174 순천', '146 전주', '- 994 조선대(~19.8.25)', '- 245 정읍', '- 283 경주', '- 000 평창', '133 대전', '- 100 대관령', '- 185 고산', '- 166 목포공항', '- 203 이천', '- 151 울산공항', '- 138 포항', '- 168 여수', '- 136 안동', '- 262 나로도', '- 172 고창', '- 140 군산', '- 167 여수공항', '- 605 영동', '- 096 독도', '- 152 울산', '- 232 천안', '- 247 남원', '- 102 백령도', '- 155 창원', '- 701 무주', '113 항공(인천공항)', '- 101 춘천', '- 142 대구공항', '058 평양 (평안남도)'],
      '연직시계열(북한-72HR)': ['- 065 사리원', '- 022 풍산', '- 052 양덕', '- 037 구성', '- 031 장진', '- 028 수풍', '008 청진 (함경북도)', '- 014 중강', '- 003 선봉', '- 046 신포', '- 070 개성', '035 신의주 (평안북도)', '- 061 장전', '- 055 원산', '- 060 남포', '- 075 평강', '- 020 강계', '058 평양 (평안남도)', '- 025 김책', '- 016 혜산', '- 039 희천', '- 050 안주', '069 해주 (황해도)', '- 068 용연', '041 함흥 (함경남도)', '- 005 삼지연', '- 067 신계'],
      '연직시계열(북한-10DAY)': ['- 065 사리원', '- 022 풍산', '- 052 양덕', '- 037 구성', '- 031 장진', '- 028 수풍', '008 청진 (함경북도)', '- 014 중강', '- 003 선봉', '- 046 신포', '- 070 개성', '035 신의주 (평안북도)', '- 061 장전', '- 055 원산', '- 060 남포', '- 075 평강', '- 020 강계', '058 평양 (평안남도)', '- 025 김책', '- 016 혜산', '- 039 희천', '- 050 안주', '069 해주 (황해도)', '- 068 용연', '041 함흥 (함경남도)', '- 005 삼지연', '- 067 신계'],
      '전선/저기압': ['전구모델', '전선 스í게티'],
      '전선/저기압(멤버별)': ['Member 05', 'Member 11', 'Member 17', 'Member 04', 'Member 08', 'Member 02', 'Member 19', 'Member 15', 'Member 14', 'Member 20', 'Member 01', 'Member 00', 'Member 12', 'Member 16', 'Member 21', 'Member 13', 'Member 03', 'Member 07', 'Member 10', 'Member 06', 'Member 23', 'Member 22', 'Member 09', 'Member 18'],
      '저기압이동경로': ['KIM전구', 'UM전구', '비교'],
      '저기압이동경로/특성': ['저기압 12', '저기압 1', '저기압 9', '저기압 11', '저기압 14', '저기압 7', '저기압 4', '저기압 13', '저기압 8', '저기압 10', '전체', '저기압 6', '저기압 2', '저기압 3', '저기압 5'],
      '전지구모델비교': ['ECMWF', 'KMA(UM)', 'JMA+ECM', 'KMA+ECM', 'JMA', 'KMA+JMA+ECM', 'ECMWF-습도', 'KMA+JMA'],
      '모델예측경향': ['대전-기온', '강릉-기온', '광주-강수,기압', '광주-기온', '강수량(단기)', '부산-기온', '제주-강수,기압', '제주-기온', '강수량(주간)', '대전-강수,기압', '부산-강수,기압', '서울-강수,기압', '강릉-강수,기압', '서울-기온'],
      '모델종합표출': ['700 고도,기온,상당온위', '850 고도,기온,혼합비', '500 고도,기온,와도', '한반도 총누적강수량', '850 수렴도,등풍속', '200/300 발산장,등풍속', '1000-700 층후', '100-500 층후', '850 유선,풍속', '200 고도,기온,풍속', '해면기압,누적강수량', '850 수분속'],
      '주간예보가이던스': ['도시-주간강수신뢰도', '전지구-주간예보', '공간-주간강수신뢰도', '앙상블-주간예보', '일별-예상강수량분포'],
      '골추적도': ['EPS 골추적도(35N)', 'KIM 골추적도(35N)', '위도별 골추적도(125E)', 'UM 골추적도(45N)', 'JMA 골추적도(35N)', 'JMA 골추적도(45N)', 'UM 골추적도(35N)', '시계열비교-지상', 'ECMWF 골추적도(35N)', '시계열비교-850기온', 'EPS 골추적도(45N)', 'ECMWF 골추적도(평균)', 'KIM 골추적도(평균)', 'KIM ê³¨추적도(45N)', 'EPS 골추적도(평균)', 'JMA 골추적도(평균)', '시계열비교-500고도', 'UM 골추적도(평균)', 'ECMWF 골추적도(45N)'],
      'KLAPS예상도': ['700 고도,기온,상당온위', '700 상승속도', '한반도 총누적강수량', '500 고도,기온,와도', '925습수(T-Td)', '700습수(T-Td)', '850 수렴,풍속', '지상습수(T-Td)', '925 수렴,풍속', '850습수(T-Td)', '850 고도,기온,비습,바람', '850 유선,풍속', '지상시정', '최하층 레이더 반사도', '925 고도,기온,비습,바람', '해면기압,누적강수량', '850 수분속'],
      'VDAPS예상도': ['700 고도,기온,상당온위', '700 상승속도', '500 고도,기온,와도', '850 수렴,풍속', '쇼월터 Index', '850 고도,기온,비습,바람', '10m 바람, 1.5 온도', '해면기압,1시간 누적강수량', '상층운량', '700습수(T-Td)', '상세바람기온(WTEM)-500hPa', '지상비습', '300 고도,기온,풍속', '지상습수(T-Td)', '200 발산', '500 유선,풍ì', '1.5km 레이더 반사도', '지상시정', '200 고도,기온,풍속', '850 수분속', '상세바람기온(WTEM)-925hPa', '925습수(T-Td)', '중층운량', '850습수(T-Td)', '상세바람기온(WTEM)-1000hPa', '925 고도,기온,비습,바람', '하층운량', '상세바람기온(WTEM)-300hPa', '1000-700 층후, 850 상당온위', 'Lifted Index', '신적설(수상댱량비 적용)', '925 수렴,풍속', '총 누적강수량', '200 유선,풍속', '상세바람기온(WTEM)-700hPa', '강수유형', 'K Index', '상세바람기온(WTEM)-850hPa', '850 유선,풍속', '상세바람기온(WTEM)-지상'],
  },
  "button1": ['경기', '전구', '종합', 'UM전구', '기준분석', '> 00 kts', '이동경로', 'VDAPS', 'UM국지', '북반구', 'KLAPS', 'KIM전구'],
  "button2": ['UM전구', '특성', '> 34 kts', '부산', '(UM)한반도', '태풍영역', '상세분석'],
  "button3": ['(UM)종합', '남반구', '비교', '> 60 kts', '광주', 'ECMWF'],
  "button4": ['비교1', 'KIM전구', 'UM국지', '대전', '국지모델', '단열선도 on/off'],
  "button5": ['(KIM)한반도', '비교2', '강원', '비교1', '연직시계열 on/off'],
  "button6": ['제주', '비교2', '비교3', '(KIM)종합', '자료샘플링 on/off'],
  "button7": ['비교4', '서울', '비교3', '비교1'],
  "button8": ['비교4', '비교2', '대구'],
  "button9": ['비교3', '단열선도 on/off'],
  "button10": ['연직시계열 on/off', '단열선도 on/off', '자료샘플링 on/off'],
}


def is_correct_grammar(sentence):
  # 동적선택1
  flag = any([re.search(prefixs[0] + re.escape(opt), sentence) for opt in options["option1"]])
  if not flag: return False
  opt1 = re.search(prefixs[0] +'((.*?)&|(.*?)$)' + prefixs[1], sentence)
  if opt1 is None:
    return False
  opt1 = opt1.group(1)
  opt1 = opt1[:-1] if '&' in opt1 else opt1
  #print('opt1:', opt1)

  # 동적선택2
  flag = any([re.search(prefixs[1] + re.escape(opt), sentence) for opt in options["option2"][opt1]])
  if not flag: return False
  opt2 = re.search(prefixs[1] +'((.*?)&|(.*?)$)', sentence)
  if opt2 is None:
    return False
  opt2 = opt2.group(1)
  opt2 = opt2[:-1] if '&' in opt2 else opt2
  #print('opt2', opt2)

  # 동적버튼1~10
  for i in range(1, 11):
    prefix_idx = i + 1
    if prefixs[prefix_idx] not in sentence: continue
    flag = any([re.search(prefixs[prefix_idx] + re.escape(opt), sentence) for opt in options["button" + str(i)]])
    if not flag: return False

  return True


